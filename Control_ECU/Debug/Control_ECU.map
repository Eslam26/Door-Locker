Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./TWI.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./GPT.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./GPT.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

g_errorCounter      0x1               ./main.o
g_data              0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./GPT.o
LOAD ./GPT_PBcfg.o
LOAD ./TWI.o
LOAD ./TWI_PBcfg.o
LOAD ./USART.o
LOAD ./USART_PBcfg.o
LOAD ./external_eeprom.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x11f6
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_17
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./GPT.o
 .text          0x00000092        0x0 ./GPT_PBcfg.o
 .text          0x00000092        0x0 ./TWI.o
 .text          0x00000092        0x0 ./TWI_PBcfg.o
 .text          0x00000092        0x0 ./USART.o
 .text          0x00000092        0x0 ./USART_PBcfg.o
 .text          0x00000092        0x0 ./external_eeprom.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_19
                0x00000092       0x74 ./GPT.o
                0x00000092                __vector_19
 .text.__vector_6
                0x00000106       0x74 ./GPT.o
                0x00000106                __vector_6
 .text.__vector_3
                0x0000017a       0x74 ./GPT.o
                0x0000017a                __vector_3
 .text.GPT_init
                0x000001ee      0x1a4 ./GPT.o
                0x000001ee                GPT_init
 .text.GPT_enable
                0x00000392       0xe4 ./GPT.o
                0x00000392                GPT_enable
 .text.GPT_disable
                0x00000476       0xd4 ./GPT.o
                0x00000476                GPT_disable
 .text.GPT_0_setCallBack
                0x0000054a       0x24 ./GPT.o
                0x0000054a                GPT_0_setCallBack
 .text.GPT_1_setCallBack
                0x0000056e       0x24 ./GPT.o
                0x0000056e                GPT_1_setCallBack
 .text.GPT_2_setCallBack
                0x00000592       0x24 ./GPT.o
                0x00000592                GPT_2_setCallBack
 .text.TWI_init
                0x000005b6       0xde ./TWI.o
                0x000005b6                TWI_init
 .text.TWI_start
                0x00000694       0x20 ./TWI.o
                0x00000694                TWI_start
 .text.TWI_stop
                0x000006b4       0x16 ./TWI.o
                0x000006b4                TWI_stop
 .text.TWI_write
                0x000006ca       0x2e ./TWI.o
                0x000006ca                TWI_write
 .text.TWI_readWithACK
                0x000006f8       0x26 ./TWI.o
                0x000006f8                TWI_readWithACK
 .text.TWI_readWithNACK
                0x0000071e       0x26 ./TWI.o
                0x0000071e                TWI_readWithNACK
 .text.TWI_getStatus
                0x00000744       0x1e ./TWI.o
                0x00000744                TWI_getStatus
 .text.__vector_11
                0x00000762       0x66 ./USART.o
                0x00000762                __vector_11
 .text.__vector_13
                0x000007c8       0x66 ./USART.o
                0x000007c8                __vector_13
 .text.__vector_12
                0x0000082e       0x66 ./USART.o
                0x0000082e                __vector_12
 .text.USART_init
                0x00000894      0x2fc ./USART.o
                0x00000894                USART_init
 .text.USART_sendByte
                0x00000b90       0x2e ./USART.o
                0x00000b90                USART_sendByte
 .text.USART_recieveByte
                0x00000bbe       0x1e ./USART.o
                0x00000bbe                USART_recieveByte
 .text.USART_TXC_setCallBack
                0x00000bdc       0x24 ./USART.o
                0x00000bdc                USART_TXC_setCallBack
 .text.USART_RXC_setCallBack
                0x00000c00       0x24 ./USART.o
                0x00000c00                USART_RXC_setCallBack
 .text.USART_UDRE_setCallBack
                0x00000c24       0x24 ./USART.o
                0x00000c24                USART_UDRE_setCallBack
 .text.EEPROM_init
                0x00000c48       0x16 ./external_eeprom.o
                0x00000c48                EEPROM_init
 .text.EEPROM_writeByte
                0x00000c5e       0x82 ./external_eeprom.o
                0x00000c5e                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000ce0       0xc0 ./external_eeprom.o
                0x00000ce0                EEPROM_readByte
 .text.main     0x00000da0       0xde ./main.o
                0x00000da0                main
 .text.passwordCreation
                0x00000e7e       0x3e ./main.o
                0x00000e7e                passwordCreation
 .text.passwordConfirmation
                0x00000ebc       0x62 ./main.o
                0x00000ebc                passwordConfirmation
 .text.savePassword
                0x00000f1e       0x50 ./main.o
                0x00000f1e                savePassword
 .text.comparingWithSavedPassword
                0x00000f6e       0xd4 ./main.o
                0x00000f6e                comparingWithSavedPassword
 .text.openCloseDoor
                0x00001042       0xb4 ./main.o
                0x00001042                openCloseDoor
 .text.buzzer   0x000010f6       0x48 ./main.o
                0x000010f6                buzzer
 .text.recieveData
                0x0000113e       0x2e ./main.o
                0x0000113e                recieveData
 .text.calledBackFunction
                0x0000116c       0x42 ./main.o
                0x0000116c                calledBackFunction
 .text.libgcc   0x000011ae       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x000011ae                __udivmodsi4
 .text.libgcc   0x000011f2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000011f2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000011f2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000011f2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000011f2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000011f2                exit
                0x000011f2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000011f2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000011f6                _etext = .

.data           0x00800060       0x24 load address 0x000011f6
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./GPT.o
 .data          0x00800060        0x0 ./GPT_PBcfg.o
 .data          0x00800060        0x0 ./TWI.o
 .data          0x00800060        0x0 ./TWI_PBcfg.o
 .data          0x00800060        0x0 ./USART.o
 .data          0x00800060        0x0 ./USART_PBcfg.o
 .data          0x00800060        0x0 ./external_eeprom.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.GPT_0_runningMode
                0x00800060        0x1 ./GPT.o
 .data.GPT_1_runningMode
                0x00800061        0x1 ./GPT.o
 .data.GPT_2_runningMode
                0x00800062        0x1 ./GPT.o
 .data.GPT_configStructure
                0x00800063       0x12 ./GPT_PBcfg.o
                0x00800063                GPT_configStructure
 .data.TWI_configStructure
                0x00800075        0x3 ./TWI_PBcfg.o
                0x00800075                TWI_configStructure
 .data.USART_configStructure
                0x00800078        0xc ./USART_PBcfg.o
                0x00800078                USART_configStructure
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800084                . = ALIGN (0x2)
                0x00800084                _edata = .
                0x00800084                PROVIDE (__data_end, .)

.bss            0x00800084       0x1d
                0x00800084                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800084        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800084        0x0 ./GPT.o
 .bss           0x00800084        0x0 ./GPT_PBcfg.o
 .bss           0x00800084        0x0 ./TWI.o
 .bss           0x00800084        0x0 ./TWI_PBcfg.o
 .bss           0x00800084        0x0 ./USART.o
 .bss           0x00800084        0x0 ./USART_PBcfg.o
 .bss           0x00800084        0x0 ./external_eeprom.o
 .bss           0x00800084        0x0 ./main.o
 .bss           0x00800084        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800084        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800084        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800084        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.g_GPT_0_callBackPtr
                0x00800084        0x2 ./GPT.o
 .bss.g_GPT_1_callBackPtr
                0x00800086        0x2 ./GPT.o
 .bss.g_GPT_2_callBackPtr
                0x00800088        0x2 ./GPT.o
 .bss.GPT_timerStructurePtr
                0x0080008a        0x2 ./GPT.o
 .bss.GPT_0_prescalerValue
                0x0080008c        0x1 ./GPT.o
 .bss.GPT_1_prescalerValue
                0x0080008d        0x1 ./GPT.o
 .bss.GPT_2_prescalerValue
                0x0080008e        0x1 ./GPT.o
 .bss.GPT_0_enableState
                0x0080008f        0x1 ./GPT.o
 .bss.GPT_1_enableState
                0x00800090        0x1 ./GPT.o
 .bss.GPT_2_enableState
                0x00800091        0x1 ./GPT.o
 .bss.g_USART_TXC_callBackPtr
                0x00800092        0x2 ./USART.o
 .bss.g_USART_RXC_callBackPtr
                0x00800094        0x2 ./USART.o
 .bss.g_USART_UDRE_callBackPtr
                0x00800096        0x2 ./USART.o
 .bss.g_password
                0x00800098        0x6 ./main.o
                0x00800098                g_password
 .bss.g_counter
                0x0080009e        0x1 ./main.o
                0x0080009e                g_counter
 *(COMMON)
 COMMON         0x0080009f        0x2 ./main.o
                0x0080009f                g_errorCounter
                0x008000a0                g_data
                0x008000a1                PROVIDE (__bss_end, .)
                0x000011f6                __data_load_start = LOADADDR (.data)
                0x0000121a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000a1        0x0
                0x008000a1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000a1                PROVIDE (__noinit_end, .)
                0x008000a1                _end = .
                0x008000a1                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x22b0
 *(.stab)
 .stab          0x00000000      0x9cc ./GPT.o
 .stab          0x000009cc      0x144 ./GPT_PBcfg.o
                                0x444 (size before relaxing)
 .stab          0x00000b10      0x420 ./TWI.o
                                0x678 (size before relaxing)
 .stab          0x00000f30      0x144 ./TWI_PBcfg.o
                                0x3e4 (size before relaxing)
 .stab          0x00001074      0x5c4 ./USART.o
                                0x81c (size before relaxing)
 .stab          0x00001638      0x144 ./USART_PBcfg.o
                                0x4a4 (size before relaxing)
 .stab          0x0000177c      0x378 ./external_eeprom.o
                                0x618 (size before relaxing)
 .stab          0x00001af4      0x7bc ./main.o
                                0xbc4 (size before relaxing)

.stabstr        0x00000000     0x1c30
 *(.stabstr)
 .stabstr       0x00000000     0x1c30 ./GPT.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Control_ECU.elf elf32-avr)
LOAD linker stubs
